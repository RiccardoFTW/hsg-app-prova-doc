{"config":{"lang":["it"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"daily-progress/2024/11/19/","title":"Progress Log - 19 Novembre 2024","text":""},{"location":"daily-progress/2024/11/19/#hsg-app-prova","title":"HSG APP PROVA","text":""},{"location":"daily-progress/2024/11/19/#obiettivi-raggiunti-oggi","title":"\ud83c\udfaf Obiettivi Raggiunti Oggi","text":"<ul> <li>Creata cartella Mkdocs per daily progress desktop/hsg-app-prova-doc</li> <li>Creata Repo su Github e creato Github pages in modo da avere il progress online</li> <li>Setup Ambiente: Create-Vite-App installato/ Tailwindcss configurato/ Installazione Shadcn-ui completata</li> <li>Applicazione: Creata Struttura Cartelle:</li> </ul>"},{"location":"daily-progress/2024/11/19/#struttura-app","title":"Struttura App","text":"<p>\ud83d\udcc1 src/ \u251c\u2500\u2500 \ud83d\udcc1 components/ \u2502   \u251c\u2500\u2500 \ud83d\udcc1 layout/ \u2502   \u2502   \u251c\u2500\u2500 Navbar.tsx \u2502   \u2502   \u2514\u2500\u2500 OperatorLayout.tsx \u2502   \u251c\u2500\u2500 \ud83d\udcc1 sections/ \u2502   \u2502   \u251c\u2500\u2500 CardGrid.tsx \u2502   \u2502   \u2514\u2500\u2500 Hero.tsx \u2502   \u2514\u2500\u2500 \ud83d\udcc1 theme-ui/ \u2502         \u251c\u2500\u2500 theme-provider.tsx \u2502         \u2514\u2500\u2500 theme-toggle.tsx \u251c\u2500\u2500 \ud83d\udcc1 lib/ \u2502   \u2514\u2500\u2500 utils.tsx \u2502 \u251c\u2500\u2500 \ud83d\udcc1 types/ \u2502 \u251c\u2500\u2500 app.tsx \u251c\u2500\u2500 index.css \u2514\u2500\u2500 main.tsx</p>"},{"location":"daily-progress/2024/11/19/#dettaglio-della-struttura-directory-e-i-componenti-creati","title":"Dettaglio della struttura Directory e i componenti creati","text":""},{"location":"daily-progress/2024/11/19/#components","title":"\ud83d\udcc1 components/","text":"<p>Contiene tutti i componenti React dell'applicazione - layout/: Componenti strutturali dell'applicazione  - <code>Navbar.tsx</code>: Barra di navigazione principale  - <code>OperatorLayout.tsx</code>: Layout per la sezione operatore - sections/: Componenti di sezione riutilizzabili  - <code>CardGrid.tsx</code>: Griglia di card  - <code>Hero.tsx</code>: Sezione hero/header della pagina - theme-ui/: Componenti UI tematizzati  - <code>Theme-provider.tsx</code>: Provider React per la gestione globale del tema dell'applicazione  - <code>Theme-toggle.tsx</code>: Componente pulsante per alternare tra tema chiaro e scuro</p>"},{"location":"daily-progress/2024/11/19/#lib","title":"\ud83d\udcc1 lib/","text":"<p>Contiene utility e funzioni helper - <code>utils.tsx</code>: Funzioni di utilit\u00e0 generale</p>"},{"location":"daily-progress/2024/11/19/#types","title":"\ud83d\udcc1 types/","text":"<p>Directory per le definizioni dei tipi TypeScript (attualmente vuota)</p>"},{"location":"daily-progress/2024/11/19/#file-principali","title":"File principali","text":"<ul> <li><code>app.tsx</code>: Componente root dell'applicazione</li> <li><code>index.css</code>: Stili CSS globali</li> <li><code>main.tsx</code>: Punto di ingresso dell'applicazione</li> </ul>"},{"location":"daily-progress/2024/11/19/#codice-implementato","title":"\ud83d\udcbb Codice Implementato","text":"<p><pre><code>// App.tsx\nimport { Navbar } from './components/layout/Navbar'\nimport { Hero } from './components/sections/Hero'\nimport { CardGrid } from './components/sections/CardGrid'\n\nfunction App() {\n    return (\n        &lt;div className=\"min-h-screen bg-background\"&gt;\n            &lt;Navbar /&gt;\n            &lt;main className=\"container mx-auto py-8\"&gt;\n                &lt;div className=\"grid gap-4\"&gt;\n                    &lt;Hero /&gt;\n                    &lt;CardGrid /&gt;\n                &lt;/div&gt;\n            &lt;/main&gt;\n        &lt;/div&gt;\n    )\n}\nexport default App\n</code></pre> <pre><code>// main.tsx\nimport { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport App from './App'\nimport { ThemeProvider } from './components/theme/theme-provider.tsx'\n\ncreateRoot(document.getElementById('root')!).render(\n    &lt;StrictMode&gt;\n        &lt;ThemeProvider&gt;\n            &lt;App /&gt;\n        &lt;/ThemeProvider&gt;\n    &lt;/StrictMode&gt;\n)\n</code></pre> <pre><code>// components/Navbar.tsx\nimport { ThemeToggle } from '../theme/theme-toggle'\nimport { Button } from '@/components/ui/button'\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuLabel,\n    DropdownMenuSeparator,\n    DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu'\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'\n\nexport function Navbar() {\n    return (\n        &lt;nav className=\"border-b\"&gt;\n            &lt;div className=\"flex h-16 items-center px-4\"&gt;\n                {/* Logo */}\n                &lt;div className=\"flex items-center space-x-4\"&gt;\n                    &lt;h2 className=\"text-2xl font-bold text-primary\"&gt;hsg app prove&lt;/h2&gt;\n                &lt;/div&gt;\n                {/* Navigation items */}\n                &lt;div className=\"ml-auto flex items-center space-x-8\"&gt;\n                    &lt;Button variant=\"ghost\" size=\"icon\"&gt;\n                        Dashboard\n                    &lt;/Button&gt;\n                    &lt;Button variant=\"ghost\" size=\"icon\"&gt;\n                        Projects\n                    &lt;/Button&gt;\n                    &lt;Button variant=\"ghost\" size=\"icon\"&gt;\n                        Tasks\n                    &lt;/Button&gt;\n                    &lt;ThemeToggle /&gt;\n                    {/* User menu */}\n                    &lt;DropdownMenu&gt;\n                        &lt;DropdownMenuTrigger asChild&gt;\n                            &lt;Button variant=\"ghost\" className=\"relative h-8 w-8 rounded-full\"&gt;\n                                &lt;Avatar className=\"h-8 w-8\"&gt;\n                                    &lt;AvatarImage\n                                        src=\"https://github.com/shadcn.png\"\n                                        alt=\"@shadcn\"\n                                    /&gt;\n                                    &lt;AvatarFallback&gt;SC&lt;/AvatarFallback&gt;\n                                &lt;/Avatar&gt;\n                            &lt;/Button&gt;\n                        &lt;/DropdownMenuTrigger&gt;\n                        &lt;DropdownMenuContent className=\"w-56\" align=\"end\" forceMount&gt;\n                            &lt;DropdownMenuLabel className=\"font-normal\"&gt;\n                                &lt;div className=\"flex flex-col space-y-4\"&gt;\n                                    &lt;p className=\"text-sm font-medium leading-none\"&gt;shadcn&lt;/p&gt;\n                                    &lt;p className=\"text-xs leading-none text-muted-foreground\"&gt;\n                                        m@example.com\n                                    &lt;/p&gt;\n                                &lt;/div&gt;\n                            &lt;/DropdownMenuLabel&gt;\n                            &lt;DropdownMenuSeparator /&gt;\n                            &lt;DropdownMenuItem&gt;Profile&lt;/DropdownMenuItem&gt;\n                            &lt;DropdownMenuItem&gt;Settings&lt;/DropdownMenuItem&gt;\n                            &lt;DropdownMenuSeparator /&gt;\n                            &lt;DropdownMenuItem&gt;Log out&lt;/DropdownMenuItem&gt;\n                        &lt;/DropdownMenuContent&gt;\n                    &lt;/DropdownMenu&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/nav&gt;\n    )\n}\n</code></pre> <pre><code>// layout/CardGrid.tsx\nimport { Card } from '../ui/Card'\n\nexport const CardGrid = () =&gt; {\n    return (\n        &lt;div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\"&gt;\n            &lt;Card title=\"Card 1\" content=\"esempio contenuto card 1\" /&gt;\n            &lt;Card title=\"Card 2\" content=\"esempio contenuto card 2\" /&gt;\n            &lt;Card title=\"Card 3\" content=\"esempio contenuto card 3\" /&gt;\n        &lt;/div&gt;\n    )\n}\n</code></pre> <pre><code>//sections/ Hero.tsx\nexport const Hero = () =&gt; {\n    return (\n        &lt;div className=\"p-4 border rounded-lg\"&gt;\n            &lt;h1 className=\"text-2xl font-bold\"&gt;hsg prova&lt;/h1&gt;\n            &lt;p className=\"text-muted-foreground\"&gt;this is a demo&lt;/p&gt;\n        &lt;/div&gt;\n    )\n}\n</code></pre> <pre><code>// theme/theme-provider.tsx\nimport React, { useEffect } from 'react'\n\nconst ThemeContext = React.createContext({\n    theme: 'light',\n    setTheme: (theme: string) =&gt; {},\n})\n\nexport function ThemeProvider({ children }: { children: React.ReactNode }) {\n    const [theme, setTheme] = React.useState('light')\n\n    useEffect(() =&gt; {\n        const savedTheme = localStorage.getItem('theme') || 'light'\n        setTheme(savedTheme)\n        document.documentElement.classList.toggle('dark', savedTheme === 'dark')\n    }, [])\n\n    const updateTheme = (newTheme: string) =&gt; {\n        setTheme(newTheme)\n        localStorage.setItem('theme', newTheme)\n        document.documentElement.classList.toggle('dark', newTheme === 'dark')\n    }\n    return (\n        &lt;ThemeContext.Provider\n            value={{\n                theme,\n                setTheme: updateTheme,\n            }}\n        &gt;\n            {children}\n        &lt;/ThemeContext.Provider&gt;\n    )\n}\n\nexport const useTheme = () =&gt; React.useContext(ThemeContext)\n</code></pre> <pre><code>// theme/theme-toggle.tsx\nimport { Moon, Sun } from 'lucide-react'\nimport { Button } from '@/components/ui/button'\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu'\nimport { useTheme } from './theme-provider'\n\nexport function ThemeToggle() {\n    const { theme, setTheme } = useTheme()\n    return (\n        &lt;DropdownMenu&gt;\n            &lt;DropdownMenuTrigger asChild&gt;\n                &lt;Button variant=\"outline\" size=\"icon\"&gt;\n                    &lt;Sun className=\"h-[1.2 rem] w-[1.2 rem] rotate-0 transition-all dark:rotate-90 dark:scale-0\" /&gt;\n                    &lt;Moon className=\"absolute h-[1.2rem] w-[1.2 rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" /&gt;\n                    &lt;span className=\"sr-only\"&gt;Toggle Theme&lt;/span&gt;\n                &lt;/Button&gt;\n            &lt;/DropdownMenuTrigger&gt;\n            &lt;DropdownMenuContent align=\"end\"&gt;\n                &lt;DropdownMenuItem onClick={() =&gt; setTheme('light')}&gt;Light&lt;/DropdownMenuItem&gt;\n                &lt;DropdownMenuItem onClick={() =&gt; setTheme('dark')}&gt;Dark&lt;/DropdownMenuItem&gt;\n            &lt;/DropdownMenuContent&gt;\n        &lt;/DropdownMenu&gt;\n    )\n}\n</code></pre> - Cartella UI contiene tutti gli elementi Shadcn-ui importati con <code>npx shadcn@latest add nomeCompoente</code></p>"},{"location":"daily-progress/2024/11/19/#problemi-incontrati","title":"\ud83d\udc1b Problemi Incontrati","text":"<ul> <li>Installazione Shadcn-ui</li> </ul>"},{"location":"daily-progress/2024/11/19/#soluzioni-applicate","title":"\u2705 Soluzioni Applicate","text":"<ul> <li>erroe di comando non aggiornato, utilizzato comando della nuova versione</li> </ul>"},{"location":"daily-progress/2024/11/19/#todo-per-domani","title":"\ud83d\udccb TODO per Domani","text":"<ul> <li> Terminare sezione OperatorLayout.tsx</li> <li> Commit su Github</li> <li> Continuare con la creazione gestione Operatori</li> <li> Sistemare UI</li> </ul>"},{"location":"daily-progress/2024/11/19/#note-learnings","title":"\ud83d\udcdd Note &amp; Learnings","text":""},{"location":"daily-progress/2024/11/19/#come-mi-deploy-su-github-pages","title":"Come mi Deploy su GitHub Pages?","text":"<p>// Aggiunge modifiche - git add . //Commit delle modifiche - git commit -m \"update documentazione\" // Push al repository principale - git push origin main // Deploya su GitHub Pages - mkdocs gh-deploy</p>"},{"location":"daily-progress/2024/11/20/","title":"Progress Log - 20 Novembre 2024","text":""},{"location":"daily-progress/2024/11/20/#hsg-app-prova","title":"HSG APP PROVA","text":""},{"location":"daily-progress/2024/11/20/#obiettivi-raggiunti-oggi","title":"\ud83c\udfaf Obiettivi Raggiunti Oggi","text":"<ul> <li>Aggiunta Dashboard principale</li> <li>Creata Repo su Github \"https://github.com/RiccardoFTW/hsg-app-prova\", implementata sicurezza Branch</li> <li>Terminato componente LayoutOperator.tsx</li> <li>Risolti problemi UI come Hover su pulsanti Navbar e aggiunto logo</li> </ul>"},{"location":"daily-progress/2024/11/20/#componenti-creati","title":"Componenti creati","text":""},{"location":"daily-progress/2024/11/20/#components","title":"\ud83d\udcc1 components/","text":"<ul> <li><code>OperatorLayout.tsx</code>: Layout per la sezione operatore</li> </ul>"},{"location":"daily-progress/2024/11/20/#codice-implementato","title":"\ud83d\udcbb Codice Implementato","text":"<p><pre><code>// layout/OperatorLayout.tsx\nimport React from 'react'\nimport { ChevronLeft, ChevronRight, Home, Calendar, FileText, Bell, Settings } from 'lucide-react'\nimport { Button } from '@/components/ui/button'\nimport { Separator } from '@/components/ui/separator'\n\nexport const OperatorLayout = () =&gt; {\n    const [sidebarOpen, setSidebarOpen] = React.useState(true)\n    const menuItems = [\n        { icon: &lt;Home size={20} /&gt;, label: 'Dashboard', path: '/dashboard' },\n        { icon: &lt;Calendar size={20} /&gt;, label: 'Turni', path: '/shifts' },\n        { icon: &lt;FileText size={20} /&gt;, label: 'Servizi', path: '/tasks' },\n\n        { icon: &lt;Bell size={20} /&gt;, label: 'Notifiche', path: '/notifications' },\n        { icon: &lt;Settings size={20} /&gt;, label: 'Impostazioni', path: '/settings' },\n    ]\n    return (\n        &lt;div className=\"min-h-screen bg-background\"&gt;\n            &lt;header className=\"border-b\"&gt;\n                &lt;div className=\"h-16 flex items-center px-4\"&gt;\n                    &lt;h1 className=\"text-xl font-semibold\"&gt;Dashboard Operatore&lt;/h1&gt;\n                &lt;/div&gt;\n            &lt;/header&gt;\n\n            &lt;div className=\"flex h-[calc(100vh-4rem)]\"&gt;\n                &lt;aside\n                    className={`\n                        border-r\n                        transition-all duration-300\n                        ${sidebarOpen ? 'w-64' : 'w-16'}\n                        `}\n                &gt;\n                    &lt;nav className=\"p-2 space-y-2\"&gt;\n                        {menuItems.map((item) =&gt; (\n                            &lt;Button\n                                key={item.path}\n                                variant=\"ghost\"\n                                className={`w-full justify-start ${\n                                    !sidebarOpen &amp;&amp; 'justify-center'\n                                }`}\n                            &gt;\n                                {item.icon}\n                                {sidebarOpen &amp;&amp; &lt;span className=\"ml-2\"&gt;{item.label}&lt;/span&gt;}\n                            &lt;/Button&gt;\n                        ))}\n                    &lt;/nav&gt;\n                &lt;/aside&gt;\n                &lt;main className=\"flex-1 p-4\"&gt;contenuto principale&lt;/main&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    )\n}\n</code></pre> - Cartella UI contiene tutti gli elementi Shadcn-ui importati con <code>npx shadcn@latest add nomeCompoente</code></p>"},{"location":"daily-progress/2024/11/20/#problemi-incontrati","title":"\ud83d\udc1b Problemi Incontrati","text":"<ul> <li>Eliminazione errata della Cartella UI, apparentemente vuota ma serviva da path per i componenti di ShadcnUI</li> </ul>"},{"location":"daily-progress/2024/11/20/#soluzioni-applicate","title":"\u2705 Soluzioni Applicate","text":"<ul> <li>importati manualmente i componenti</li> </ul>"},{"location":"daily-progress/2024/11/20/#todo-per-domani","title":"\ud83d\udccb TODO per Domani","text":"<ul> <li> Terminare sezione OperatorLayout.tsx</li> <li> Scheda Operatore</li> <li> Continuare con la creazione gestione Operatori</li> <li> Sistemare UI</li> </ul>"},{"location":"daily-progress/2024/11/20/#note-learnings","title":"\ud83d\udcdd Note &amp; Learnings","text":""},{"location":"daily-progress/2024/11/20/#come-mi-deploy-su-github-pages","title":"Come mi Deploy su GitHub Pages?","text":"<p>// Aggiunge modifiche - git add . //Commit delle modifiche - git commit -m \"update documentazione\" // Push al repository principale - git push origin main // Deploya su GitHub Pages - mkdocs gh-deploy</p>"},{"location":"daily-progress/2024/11/21/","title":"Progress Log - 21 Novembre 2024","text":""},{"location":"daily-progress/2024/11/21/#hsg-app-prova","title":"HSG APP PROVA","text":""},{"location":"daily-progress/2024/11/21/#obiettivi-raggiunti-oggi","title":"\ud83c\udfaf Obiettivi Raggiunti Oggi","text":"<ul> <li>Creazione CardOperator.tsx</li> <li>Modificata Hero con le varie sezioni Operatori attivi / eventi in corso / turni / alert</li> <li>Creazione componente OperatorCardSkeleton.tsx</li> <li>OperatorList.tsx</li> </ul>"},{"location":"daily-progress/2024/11/21/#codice-implementato","title":"\ud83d\udcbb Codice Implementato","text":"<p><pre><code> // sections/CardOperator.tsx\n import React from 'react'\n import { Card, CardContent } from '@/components/ui/card'\n import { Badge } from '@/components/ui/badge'\n import { Avatar, AvatarImage, AvatarFallback } from '@radix-ui/react-avatar'\n import { Phone, Mail, BadgeCheck } from 'lucide-react'\n\n export interface Operator {\n     id: string\n     name: string\n     role: string\n     email: string\n     phone: string\n     startDate: string\n     image: string\n     certificates: string[]\n     status: 'active' | 'inactive'\n }\n\n interface CardOperatorProps {\n     operator: Operator\n }\n\n export const CardOperator = ({ operator }: CardOperatorProps) =&gt; {\n     const getStatusColor = (status: Operator['status']) =&gt; {\n         switch (status) {\n             case 'active':\n                 return 'bg-green-100 text-green-700 dark:bg-green-900 dark:text-green-300'\n             case 'inactive':\n                 return 'bg-red-100 text-red-700 dark:bg-red-900 dark:text-red-300'\n         }\n     }\n\n     return (\n         &lt;Card className=\"overflow-hidden hover:shadow-lg transition-shadow\"&gt;\n             &lt;CardContent className=\"p-2\"&gt;\n                 &lt;div className=\"flex space-x-4 p-4\"&gt;\n                     &lt;Avatar className=\"h-20 w-20\"&gt;\n                         &lt;AvatarImage src={operator.image} alt={operator.name} /&gt;\n                         &lt;AvatarFallback&gt;\n                             {operator.name\n                                 .split(' ')\n                                 .map((name) =&gt; name[0])\n                                 .join(' ')}\n                         &lt;/AvatarFallback&gt;\n                     &lt;/Avatar&gt;\n                 &lt;/div&gt;\n\n                 &lt;div className=\"flex-1\"&gt;\n                     &lt;div className=\"flex items-center justify-between\"&gt;\n                         &lt;h3 className=\"font-semibold text-lg\"&gt;{operator.name}&lt;/h3&gt;\n                         &lt;Badge variant=\"outline\" className={getStatusColor(operator.status)}&gt;\n                             {operator.status === 'active' ? 'Attivo' : 'Inattivo'}\n                         &lt;/Badge&gt;\n                     &lt;/div&gt;\n                     &lt;p className=\"text-sm text-muted-foreground\"&gt;{operator.role}&lt;/p&gt;\n                 &lt;/div&gt;\n\n                 &lt;div className=\"px-4 pb-2 border-t\"&gt;\n                     &lt;div className=\"grid grid-cols-2 gap-2 mt-2\"&gt;\n                         &lt;div className=\"flex items-center space-x-2 text-sm text-muted-foreground\"&gt;\n                             &lt;Mail className=\"h-4 w-4\" /&gt;\n                             &lt;span className=\"truncate\"&gt;{operator.email}&lt;/span&gt;\n                         &lt;/div&gt;\n                         &lt;div className=\"flex items-center space-x-2 text-sm text-muted-foreground\"&gt;\n                             &lt;Phone className=\"h-4 w-4\" /&gt;\n                             &lt;span&gt;{operator.phone}&lt;/span&gt;\n                         &lt;/div&gt;\n                     &lt;/div&gt;\n                 &lt;/div&gt;\n\n                 &lt;div className=\"px-4 pb-4 mt-2\"&gt;\n                     &lt;div className=\"flex flex-wrap gap-2\"&gt;\n                         {operator.certificates.map((cert, index) =&gt; (\n                             &lt;Badge\n                                 key={index}\n                                 variant=\"outline\"\n                                 className=\"flex items-center space-x-1\"\n                             &gt;\n                                 &lt;BadgeCheck className=\"h-3 w-3\" /&gt;\n                                 &lt;span&gt;{cert}&lt;/span&gt;\n                             &lt;/Badge&gt;\n                         ))}\n                     &lt;/div&gt;\n                 &lt;/div&gt;\n             &lt;/CardContent&gt;\n         &lt;/Card&gt;\n     )\n }\n</code></pre> <pre><code>// NEW sections/hero.tsx\nimport React, { useEffect } from 'react'\nimport { Badge } from '@/components/ui/badge'\n\nimport { Shield, Users, Calendar, Bell } from 'lucide-react'\n\nexport const Hero = () =&gt; {\n    const [currentTime, setCurrentTime] = React.useState(new Date())\n\n    useEffect(() =&gt; {\n        const timer = setInterval(() =&gt; {\n            setCurrentTime(new Date())\n        }, 60000)\n\n        return () =&gt; clearInterval(timer)\n    }, [])\n    return (\n        &lt;div className=\"p-4 border rounded-lg bg-background\"&gt;\n            &lt;div className=\"space-y-2 mb-6\"&gt;\n                &lt;div className=\"flex items-center justify-between\"&gt;\n                    &lt;h1 className=\"text-2xl font-bold\"&gt;Panoramica&lt;/h1&gt;\n                    &lt;Badge color=\"grey\" className=\"text-sm\"&gt;\n                        Alpha\n                    &lt;/Badge&gt;\n                &lt;/div&gt;\n                &lt;p className=\"text-muted-foreground\"&gt;\n                    {new Date().toLocaleDateString()}{' '}\n                    {new Date().toLocaleTimeString('it-IT', { hour: '2-digit', minute: '2-digit' })}\n                &lt;/p&gt;\n            &lt;/div&gt;\n            &lt;div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mt-4\"&gt;\n                &lt;div className=\"flex items-center gap-2\"&gt;\n                    &lt;div className=\"p-2 bg-blue-100 dark:bg-blue-900 rounded-lg\"&gt;\n                        &lt;Users className=\"h-4 w-4 text-blue-700 dark:text-blue-300\" /&gt;\n                    &lt;/div&gt;\n                    &lt;p className=\"text-sm text-muted-foreground\"&gt;Operatori&lt;/p&gt;\n                    &lt;p className=\"font-medium\"&gt;24 Attivi&lt;/p&gt;\n                &lt;/div&gt;\n\n                &lt;div className=\"flex items-center gap-2\"&gt;\n                    &lt;div className=\"p-2 bg-green-100 dark:bg-green-900 rounded-lg\"&gt;\n                        &lt;Shield className=\"h-4 w-4 text-green-700 dark:text-green-300\" /&gt;\n                    &lt;/div&gt;\n                    &lt;p className=\"text-sm text-muted-foreground\"&gt;Eventi&lt;/p&gt;\n                    &lt;p className=\"font-medium\"&gt;3 in corso&lt;/p&gt;\n                &lt;/div&gt;\n\n                &lt;div className=\"flex items-center gap-2\"&gt;\n                    &lt;div className=\"p-2 bg-yellow-100 dark:bg-yellow-900 rounded-lg\"&gt;\n                        &lt;Calendar className=\"h-4 w-4 text-yellow-700 dark:text-yellow-300\" /&gt;\n                    &lt;/div&gt;\n                    &lt;p className=\"text-sm text-muted-foreground\"&gt;Turni&lt;/p&gt;\n                    &lt;p className=\"font-medium\"&gt;12 Oggi&lt;/p&gt;\n                &lt;/div&gt;\n\n                &lt;div className=\"flex items-center gap-2\"&gt;\n                    &lt;div className=\"p-2 bg-red-100 dark:bg-red-900 rounded-lg\"&gt;\n                        &lt;Bell className=\"h-4 w-4 text-red-700 dark:text-red-300\" /&gt;\n                    &lt;/div&gt;\n                    &lt;p className=\"text-sm text-muted-foreground\"&gt;Alert&lt;/p&gt;\n                    &lt;p className=\"font-medium\"&gt;2 Attivi&lt;/p&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    )\n}\n</code></pre> <pre><code>// sections/OperatorCardSkeleton.tsx\nimport { Card, CardContent } from '@/components/ui/card'\n\nexport const OperatorCardSkeleton = () =&gt; {\n    return (\n        &lt;Card className=\"overflow-hidden\"&gt;\n            &lt;CardContent className=\"p-0\"&gt;\n                &lt;div className=\"flex space-x-4 p-4\"&gt;\n                    &lt;div className=\"w-20 h-20 rounded-full bg-gray-200 animate-pulse\" /&gt;\n                    &lt;div className=\"flex-1 space-y-2\"&gt;\n                        &lt;div className=\"h-4 bg-gray-200 rounded animate-pulse\" /&gt;\n                        &lt;div className=\"h-3 bg-gray-200 rounded w-3/4 animate-pulse\" /&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n                &lt;div className=\"px-4 pb-4\"&gt;\n                    &lt;div className=\"grid grid-cols-2 gap-2\"&gt;\n                        &lt;div className=\"h-3 bg-gray-200 rounded animate-pulse\" /&gt;\n                        &lt;div className=\"h-3 bg-gray-200 rounded animate-pulse\" /&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/CardContent&gt;\n        &lt;/Card&gt;\n    )\n}\n</code></pre> <pre><code>// sections/OperatorList.tsx\nimport React from 'react'\nimport { CardOperator, Operator } from './CardOperator'\n\nconst mockOperators: Operator[] = [\n    {\n        id: '1',\n        name: 'Francesco Nicosia',\n        role: 'Coordinatore',\n        email: 'francesco.nicosia@hsg-group.it',\n        phone: '3458295840',\n        startDate: '1998-01-01',\n        image: '/api/placeholder/100/100',\n        certificates: ['Antincendio', 'ASC'],\n        status: 'active',\n    },\n    {\n        id: '2',\n        name: 'Paolo Arigoni',\n        role: 'Coordinatore',\n        email: 'paolo.arigoni@hsg-group.it',\n        phone: '3458296540',\n        startDate: '2010-01-01',\n        image: '/api/placeholder/100/100',\n        certificates: ['Antincendio', 'ASC'],\n        status: 'active',\n    },\n    {\n        id: '3',\n        name: 'Donato Garruto',\n        role: 'Coordinatore',\n        email: 'donato.garruto@hsg-group.it',\n        phone: '3458212340',\n        startDate: '2004-01-01',\n        image: '/api/placeholder/100/100',\n        certificates: ['Antincendio', 'ASC'],\n        status: 'active',\n    },\n    {\n        id: '4',\n        name: 'Riccardo Ventura',\n        role: 'Operatore',\n        email: 'r.ventura@outlook.it',\n        phone: '3458213090',\n        startDate: '2023-01-01',\n        image: '/api/placeholder/100/100',\n        certificates: ['Antincendio'],\n        status: 'inactive',\n    },\n]\n\nexport const OperatorList = () =&gt; {\n    return (\n        &lt;div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"&gt;\n            {mockOperators.map((operator) =&gt; (\n                &lt;CardOperator key={operator.id} operator={operator} /&gt;\n            ))}\n        &lt;/div&gt;\n    )\n}\n</code></pre></p>"},{"location":"daily-progress/2024/11/21/#problemi-incontrati","title":"\ud83d\udc1b Problemi Incontrati","text":"<ul> <li>Nulla da segnalare, magari riguardare logica Javascript</li> </ul>"},{"location":"daily-progress/2024/11/21/#soluzioni-applicate","title":"\u2705 Soluzioni Applicate","text":"<p>-</p>"},{"location":"daily-progress/2024/11/21/#todo-per-domani","title":"\ud83d\udccb TODO per Domani","text":"<ul> <li>[] Gestione Turni</li> <li>[] Review Documentazione</li> <li>[] Gestione Servizi</li> <li>[] Iniziare a guardare per gestione remota</li> </ul>"},{"location":"daily-progress/2024/11/21/#note-learnings","title":"\ud83d\udcdd Note &amp; Learnings","text":""},{"location":"daily-progress/2024/11/21/#come-mi-deploy-su-github-pages","title":"Come mi Deploy su GitHub Pages?","text":"<p>// Aggiunge modifiche - git add . //Commit delle modifiche - git commit -m \"update documentazione\" // Push al repository principale - git push origin main // Deploya su GitHub Pages - mkdocs gh-deploy</p>"},{"location":"daily-progress/2024/11/22/","title":"Progress Log - 21 Novembre 2024","text":""},{"location":"daily-progress/2024/11/22/#hsg-app-prova","title":"HSG APP PROVA","text":""},{"location":"daily-progress/2024/11/22/#obiettivi-raggiunti-oggi","title":"\ud83c\udfaf Obiettivi Raggiunti Oggi","text":"<ul> <li>Creazione CardOperator.tsx</li> <li>Modificata Hero con le varie sezioni Operatori attivi / eventi in corso / turni / alert</li> <li>Creazione componente OperatorCardSkeleton.tsx</li> <li>OperatorList.tsx</li> </ul>"},{"location":"daily-progress/2024/11/22/#codice-implementato","title":"\ud83d\udcbb Codice Implementato","text":"<p><pre><code> // sections/CardOperator.tsx\n import React from 'react'\n import { Card, CardContent } from '@/components/ui/card'\n import { Badge } from '@/components/ui/badge'\n import { Avatar, AvatarImage, AvatarFallback } from '@radix-ui/react-avatar'\n import { Phone, Mail, BadgeCheck } from 'lucide-react'\n\n export interface Operator {\n     id: string\n     name: string\n     role: string\n     email: string\n     phone: string\n     startDate: string\n     image: string\n     certificates: string[]\n     status: 'active' | 'inactive'\n }\n\n interface CardOperatorProps {\n     operator: Operator\n }\n\n export const CardOperator = ({ operator }: CardOperatorProps) =&gt; {\n     const getStatusColor = (status: Operator['status']) =&gt; {\n         switch (status) {\n             case 'active':\n                 return 'bg-green-100 text-green-700 dark:bg-green-900 dark:text-green-300'\n             case 'inactive':\n                 return 'bg-red-100 text-red-700 dark:bg-red-900 dark:text-red-300'\n         }\n     }\n\n     return (\n         &lt;Card className=\"overflow-hidden hover:shadow-lg transition-shadow\"&gt;\n             &lt;CardContent className=\"p-2\"&gt;\n                 &lt;div className=\"flex space-x-4 p-4\"&gt;\n                     &lt;Avatar className=\"h-20 w-20\"&gt;\n                         &lt;AvatarImage src={operator.image} alt={operator.name} /&gt;\n                         &lt;AvatarFallback&gt;\n                             {operator.name\n                                 .split(' ')\n                                 .map((name) =&gt; name[0])\n                                 .join(' ')}\n                         &lt;/AvatarFallback&gt;\n                     &lt;/Avatar&gt;\n                 &lt;/div&gt;\n\n                 &lt;div className=\"flex-1\"&gt;\n                     &lt;div className=\"flex items-center justify-between\"&gt;\n                         &lt;h3 className=\"font-semibold text-lg\"&gt;{operator.name}&lt;/h3&gt;\n                         &lt;Badge variant=\"outline\" className={getStatusColor(operator.status)}&gt;\n                             {operator.status === 'active' ? 'Attivo' : 'Inattivo'}\n                         &lt;/Badge&gt;\n                     &lt;/div&gt;\n                     &lt;p className=\"text-sm text-muted-foreground\"&gt;{operator.role}&lt;/p&gt;\n                 &lt;/div&gt;\n\n                 &lt;div className=\"px-4 pb-2 border-t\"&gt;\n                     &lt;div className=\"grid grid-cols-2 gap-2 mt-2\"&gt;\n                         &lt;div className=\"flex items-center space-x-2 text-sm text-muted-foreground\"&gt;\n                             &lt;Mail className=\"h-4 w-4\" /&gt;\n                             &lt;span className=\"truncate\"&gt;{operator.email}&lt;/span&gt;\n                         &lt;/div&gt;\n                         &lt;div className=\"flex items-center space-x-2 text-sm text-muted-foreground\"&gt;\n                             &lt;Phone className=\"h-4 w-4\" /&gt;\n                             &lt;span&gt;{operator.phone}&lt;/span&gt;\n                         &lt;/div&gt;\n                     &lt;/div&gt;\n                 &lt;/div&gt;\n\n                 &lt;div className=\"px-4 pb-4 mt-2\"&gt;\n                     &lt;div className=\"flex flex-wrap gap-2\"&gt;\n                         {operator.certificates.map((cert, index) =&gt; (\n                             &lt;Badge\n                                 key={index}\n                                 variant=\"outline\"\n                                 className=\"flex items-center space-x-1\"\n                             &gt;\n                                 &lt;BadgeCheck className=\"h-3 w-3\" /&gt;\n                                 &lt;span&gt;{cert}&lt;/span&gt;\n                             &lt;/Badge&gt;\n                         ))}\n                     &lt;/div&gt;\n                 &lt;/div&gt;\n             &lt;/CardContent&gt;\n         &lt;/Card&gt;\n     )\n }\n</code></pre> <pre><code>// NEW sections/hero.tsx\nimport React, { useEffect } from 'react'\nimport { Badge } from '@/components/ui/badge'\n\nimport { Shield, Users, Calendar, Bell } from 'lucide-react'\n\nexport const Hero = () =&gt; {\n    const [currentTime, setCurrentTime] = React.useState(new Date())\n\n    useEffect(() =&gt; {\n        const timer = setInterval(() =&gt; {\n            setCurrentTime(new Date())\n        }, 60000)\n\n        return () =&gt; clearInterval(timer)\n    }, [])\n    return (\n        &lt;div className=\"p-4 border rounded-lg bg-background\"&gt;\n            &lt;div className=\"space-y-2 mb-6\"&gt;\n                &lt;div className=\"flex items-center justify-between\"&gt;\n                    &lt;h1 className=\"text-2xl font-bold\"&gt;Panoramica&lt;/h1&gt;\n                    &lt;Badge color=\"grey\" className=\"text-sm\"&gt;\n                        Alpha\n                    &lt;/Badge&gt;\n                &lt;/div&gt;\n                &lt;p className=\"text-muted-foreground\"&gt;\n                    {new Date().toLocaleDateString()}{' '}\n                    {new Date().toLocaleTimeString('it-IT', { hour: '2-digit', minute: '2-digit' })}\n                &lt;/p&gt;\n            &lt;/div&gt;\n            &lt;div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mt-4\"&gt;\n                &lt;div className=\"flex items-center gap-2\"&gt;\n                    &lt;div className=\"p-2 bg-blue-100 dark:bg-blue-900 rounded-lg\"&gt;\n                        &lt;Users className=\"h-4 w-4 text-blue-700 dark:text-blue-300\" /&gt;\n                    &lt;/div&gt;\n                    &lt;p className=\"text-sm text-muted-foreground\"&gt;Operatori&lt;/p&gt;\n                    &lt;p className=\"font-medium\"&gt;24 Attivi&lt;/p&gt;\n                &lt;/div&gt;\n\n                &lt;div className=\"flex items-center gap-2\"&gt;\n                    &lt;div className=\"p-2 bg-green-100 dark:bg-green-900 rounded-lg\"&gt;\n                        &lt;Shield className=\"h-4 w-4 text-green-700 dark:text-green-300\" /&gt;\n                    &lt;/div&gt;\n                    &lt;p className=\"text-sm text-muted-foreground\"&gt;Eventi&lt;/p&gt;\n                    &lt;p className=\"font-medium\"&gt;3 in corso&lt;/p&gt;\n                &lt;/div&gt;\n\n                &lt;div className=\"flex items-center gap-2\"&gt;\n                    &lt;div className=\"p-2 bg-yellow-100 dark:bg-yellow-900 rounded-lg\"&gt;\n                        &lt;Calendar className=\"h-4 w-4 text-yellow-700 dark:text-yellow-300\" /&gt;\n                    &lt;/div&gt;\n                    &lt;p className=\"text-sm text-muted-foreground\"&gt;Turni&lt;/p&gt;\n                    &lt;p className=\"font-medium\"&gt;12 Oggi&lt;/p&gt;\n                &lt;/div&gt;\n\n                &lt;div className=\"flex items-center gap-2\"&gt;\n                    &lt;div className=\"p-2 bg-red-100 dark:bg-red-900 rounded-lg\"&gt;\n                        &lt;Bell className=\"h-4 w-4 text-red-700 dark:text-red-300\" /&gt;\n                    &lt;/div&gt;\n                    &lt;p className=\"text-sm text-muted-foreground\"&gt;Alert&lt;/p&gt;\n                    &lt;p className=\"font-medium\"&gt;2 Attivi&lt;/p&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    )\n}\n</code></pre> <pre><code>// sections/OperatorCardSkeleton.tsx\nimport { Card, CardContent } from '@/components/ui/card'\n\nexport const OperatorCardSkeleton = () =&gt; {\n    return (\n        &lt;Card className=\"overflow-hidden\"&gt;\n            &lt;CardContent className=\"p-0\"&gt;\n                &lt;div className=\"flex space-x-4 p-4\"&gt;\n                    &lt;div className=\"w-20 h-20 rounded-full bg-gray-200 animate-pulse\" /&gt;\n                    &lt;div className=\"flex-1 space-y-2\"&gt;\n                        &lt;div className=\"h-4 bg-gray-200 rounded animate-pulse\" /&gt;\n                        &lt;div className=\"h-3 bg-gray-200 rounded w-3/4 animate-pulse\" /&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n                &lt;div className=\"px-4 pb-4\"&gt;\n                    &lt;div className=\"grid grid-cols-2 gap-2\"&gt;\n                        &lt;div className=\"h-3 bg-gray-200 rounded animate-pulse\" /&gt;\n                        &lt;div className=\"h-3 bg-gray-200 rounded animate-pulse\" /&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/CardContent&gt;\n        &lt;/Card&gt;\n    )\n}\n</code></pre> <pre><code>// sections/OperatorList.tsx\nimport React from 'react'\nimport { CardOperator, Operator } from './CardOperator'\n\nconst mockOperators: Operator[] = [\n    {\n        id: '1',\n        name: 'Francesco Nicosia',\n        role: 'Coordinatore',\n        email: 'francesco.nicosia@hsg-group.it',\n        phone: '3458295840',\n        startDate: '1998-01-01',\n        image: '/api/placeholder/100/100',\n        certificates: ['Antincendio', 'ASC'],\n        status: 'active',\n    },\n    {\n        id: '2',\n        name: 'Paolo Arigoni',\n        role: 'Coordinatore',\n        email: 'paolo.arigoni@hsg-group.it',\n        phone: '3458296540',\n        startDate: '2010-01-01',\n        image: '/api/placeholder/100/100',\n        certificates: ['Antincendio', 'ASC'],\n        status: 'active',\n    },\n    {\n        id: '3',\n        name: 'Donato Garruto',\n        role: 'Coordinatore',\n        email: 'donato.garruto@hsg-group.it',\n        phone: '3458212340',\n        startDate: '2004-01-01',\n        image: '/api/placeholder/100/100',\n        certificates: ['Antincendio', 'ASC'],\n        status: 'active',\n    },\n    {\n        id: '4',\n        name: 'Riccardo Ventura',\n        role: 'Operatore',\n        email: 'r.ventura@outlook.it',\n        phone: '3458213090',\n        startDate: '2023-01-01',\n        image: '/api/placeholder/100/100',\n        certificates: ['Antincendio'],\n        status: 'inactive',\n    },\n]\n\nexport const OperatorList = () =&gt; {\n    return (\n        &lt;div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"&gt;\n            {mockOperators.map((operator) =&gt; (\n                &lt;CardOperator key={operator.id} operator={operator} /&gt;\n            ))}\n        &lt;/div&gt;\n    )\n}\n</code></pre></p>"},{"location":"daily-progress/2024/11/22/#problemi-incontrati","title":"\ud83d\udc1b Problemi Incontrati","text":"<ul> <li>Nulla da segnalare, magari riguardare logica Javascript</li> </ul>"},{"location":"daily-progress/2024/11/22/#soluzioni-applicate","title":"\u2705 Soluzioni Applicate","text":"<p>-</p>"},{"location":"daily-progress/2024/11/22/#todo-per-domani","title":"\ud83d\udccb TODO per Domani","text":"<ul> <li>[] Gestione Turni</li> <li>[] Review Documentazione</li> <li>[] Gestione Servizi</li> <li>[] Iniziare a guardare per gestione remota</li> </ul>"},{"location":"daily-progress/2024/11/22/#note-learnings","title":"\ud83d\udcdd Note &amp; Learnings","text":""},{"location":"daily-progress/2024/11/22/#come-mi-deploy-su-github-pages","title":"Come mi Deploy su GitHub Pages?","text":"<p>// Aggiunge modifiche - git add . //Commit delle modifiche - git commit -m \"update documentazione\" // Push al repository principale - git push origin main // Deploya su GitHub Pages - mkdocs gh-deploy</p>"}]}